<style>
	#networkLastReward{
		text-transform: uppercase;
	}
	#lastHash{
		font-family: 'Inconsolata', monospace;
		font-size: 0.8em;
	}

	#calcHashDropdown{
		border-radius: 0;
		border-left: 0;
		border-right: 0;
	}
	#calcHashHolder{
		width: 360px;
		max-width: 100%;
	}
	#calcHashRate{
		z-index: inherit;
		font-family: 'Inconsolata', monospace;
	}
	#calcHashAmount{
		font-family: 'Inconsolata', monospace;
	}
	#calcHashResultsHolder{
		max-width: 145px;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}
	#yourStatsInput{
		z-index: inherit;
		font-family: 'Inconsolata', monospace;
	}
	#lookUp > span:nth-child(2){
		display: none;
	}
	.yourStats{
		display: none;
	}

	.stats_rows > tr > td:nth-child(2){
		text-align: left;
	}
	.stats_rows > tr > td > div {
		width: 150px;
		white-space: nowrap; 
    	overflow: hidden;
    	text-overflow: ellipsis;
	}

	ul.time-filter {
    	list-style-type: none;
		padding-left: 5px;
		padding-right: 5px;
		text-align: right;
		position: absolute;
		top: -10px;
		left: 24px;
		z-index: 1;
		background-color:rgba(0, 0, 0, 0.1);
	}

	ul.time-filter li {
		display: inline;
		white-space: nowrap;
		font-weight: bold;
		font-size: x-small;
	}

</style>

<div class="row" id="registerWarning">
	<div style="margin-top:5px;margin-right:5px;" class="float-right"><a href="#" class="btn btn-xs btn-info" onclick="$('#registerWarning').hide(); createCookie('registerWarning', true, 365);">
		<i class="fa fa-times" title="Hide registration prompt"></i></a></div>
	<div class="alert alert-danger clearfix" id="registrationMessage">
		<p><strong>Please <a href="#signup">register</a> before mining.</strong>  This pool requires user registration. Miner connections with unregistered wallet address will be declined.</p>
	</div>
</div>

<div class="row">
	<div class="alert alert-success clearfix">
		<p><a href="https://goo.gl/oEM1sM" target="_blank"><b>Join RustyBlock community on &nbsp;<img src="images/slack-logo.png"/></b></a> &nbsp;for discussions and support. Happy mining!</p>
		<p style="font-size:x-small;font-family: Verdana, Geneva, Tahoma, sans-serif;"><span style="color: red;font-weight: bold;">Orphaned blocks alert!</span> RustyBlock pool recently found multiple orphaned blocks
		due to the new mining hardware submitting <b>shares for expired blocks</b> even after the pool's notification about new job. We are working on pool improvements to avoid confusions and make sure that expired shares 
		will not be accepted as blocks. In addition to the fixes for expired shares, we are working on improving transparency of RustyBlock pool by adding <b>live status of our network nodes</b> and real-time tracker for the <b>best shares submitted by miners</b>.</p>
	</div>
</div>

<div class="row">
	<div class="col-md-4 col-sm-6 stats">
		<h3>This Pool</h3>
		<div><i class="fa fas fa-tachometer-alt"></i> Hash Rate: <span id="poolHashrate"></span></div>
		<div><i class="fa fas fa-clock"></i> Last Block Found: <span id="poolLastBlockFound"></span></div>
		<div><i class="fa fa-users"></i> Connected Miners: <span id="poolMiners"></span></div>
		<div><i class="fa fa-random"></i> Round Hashes: <span id="poolRoundHashes"></span>&nbsp;</div>
		<div><i class="fa fas fa-money-bill-alt"></i> Total Pool Fee: <span id="poolFee"></span></div>
		<div><i class="fa fa-history"></i> Block Found Every: <span id="blockSolvedTime"></span> (est.)</div>
	</div>

	<div class="col-md-4 col-sm-6 stats">
		<h3><%= pool.currency.name %> Network</h3>
		<div><i class="fa fas fa-tachometer-alt"></i> Hash Rate: <span id="networkHashrate"></span></div>
		<div><i class="fa fas fa-clock"></i> Block Found: <span id="networkLastBlockFound"></span></div>
		<div><i class="fa fa-unlock-alt"></i> Difficulty: <span id="networkDifficulty"></span></div>
		<div><i class="fa fa-bars"></i> Blockchain Height: <span id="blockchainHeight"></span></div>
		<div><i class="fa fas fa-money-bill-alt"></i> Last Reward: <span id="networkLastReward"></span></div>
		<div><i class="fa fa-paw"></i> Last Hash: <a id="lastHash" target="_blank"></a></div>
	</div>

	<div class="col-md-4 hidden-sm hidden-xs" style="margin-top:25px;">
		<script type="text/javascript" src="https://files.coinmarketcap.com/static/widget/currency.js"></script>
		<div class="coinmarketcap-currency-widget" data-currencyid="<%= pool.currency.coinMarketId %>" data-base="USD" data-secondary="BTC" data-ticker="true" data-rank="true" data-marketcap="true" data-volume="true" data-stats="USD" data-statsticker="false"></div>
		<div id="calcHashHolder">
			<div class="input-group">
				<input type="number" class="form-control" id="calcHashRate" placeholder="Miner hash rate">
				<div class="input-group-btn">
					<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" id="calcHashDropdown">
						<span id="calcHashUnit" data-mul="1">KH/s</span> <span class="caret"></span>
					</button>
					<ul class="dropdown-menu dropdown-menu-right" role="menu" id="calcHashUnits">
						<li><a href="#" data-mul="0">H/s</a></li>
						<li><a href="#" data-mul="1">KH/s</a></li>
						<li><a href="#" data-mul="2">MH/s</a></li>
					</ul>
				</div><span class="input-group-addon" id="calcHashResultsHolder">=&nbsp;<span id="calcHashAmount"></span> <span id="calcHashSymbol"></span>/day</span>
			</div>
		</div>
	</div>
</div>

<div id="paymentIdNote">
<hr>
<div class="row">
	<div style="margin-top:24px;" class="float-right"><a href="#" class="btn btn-xs btn-info" onclick="$('#paymentIdNote').hide(); createCookie('paymentIdNote', true, 365);">
		<i class="fa fa-times" title="Hide wallet information"></i></a></div>
	<div class="float-left"><h3 class="mb-20"><%= pool.currency.name %> wallets for mining</h3></div>
	<div class="alert alert-success clearfix"><%- pool.currency.walletPromptHtml %>
		<br/>We recommend a mobile or paper wallet if you\'d like to mine to your own address.
	</div>
	<div class="col-md-6 col-sm-6">
		<strong class="float-left"><%= pool.currency.desktopWalletPrompt %></strong><br/>
		<%- pool.currency.walletDownloadHtml %><span>You'll be able to spend or receive <%= pool.currency.name %> coins. Use your wallet address in Windows, 
				Mac and Linux CPU mining software that will run from your desktop PC or specialized hardware and mine more <%= pool.currency.code %> with help from RustyBlock pool.</span>
	</div>
	<div class="col-md-6 col-sm-6">
		<strong class="float-left">Official paper wallet</strong><br/><%- pool.currency.paperWalletHtml %>				
	</div>
</div>
</div>

<hr>

<div class="row">
	<h3 class="mb-20">Your Stats &amp; Payment History</h3>
	<div class="stats">

		<div class="input-group">
			<input class="form-control" id="yourStatsInput" type="text" placeholder="Enter your wallet address">
			<span class="input-group-btn"><button class="btn btn-default" type="button" id="lookUp">
				<span><i class="fa fa-search"></i> Select</span>
				<span><i class="fa fa-refresh fa-spin"></i> Searching...</span>
			</button></span>
		</div>
		<div class="row">
			<div id="addressError" class="col-md-12"></div>
		</div>
		<div class="row">
			<div class="stats col-md-5 col-sm-6 col-lg-4">
				<div class="yourStats"><i class="fa fas fa-archive"></i> Pending Balance: <span id="yourPendingBalance"></span></div>
				<div class="yourStats"><i class="fa fas fa-money-bill-alt"></i> Total Paid: <span id="yourPaid"></span></div>
				<div class="yourStats"><i class="fa fas fa-clock"></i> Last Share Submitted: <span id="yourLastShare"></span></div>
				<div class="yourStats"><i class="fa fa-tachometer-alt"></i> Hash Rate: <span id="yourHashrateHolder"></span></div>
				<div class="yourStats"><i class="fa fa-chart-pie"></i> Round Share: <span id="yourHashes"></span> / <span id="yourShare" style="font-weight:bold;"></span> (est.)</div>
			</div>
			<div class="col-md-7 col-sm-6 col-lg-8" style="display:none;" id="chartColumn">
				<div id="chartOverlay" class="overlay">
					<div class="loader-overlay"></div>
					<div class="loader"></div>
				</div>
				<ul class="time-filter">
					<li><a href="javascript:void(0)" onclick="switchAddressChart(24)">1 day</a>&nbsp;|</li>
					<li><a href="javascript:void(0)" onclick="switchAddressChart(72)">3 days</a>&nbsp;|</li>
					<li><a href="javascript:void(0)" onclick="switchAddressChart(168)">7 days</a></li>
				</ul>
				<div id="chart-container" style="height: 180px; min-width: 310px"></div>
			</div>
		</div>
		<div class="row">
			<div class="col-md-12">
			<h4 class="yourStats">Payments</h4>
			<div class="yourStats table-responsive">
				<table class="table table-striped">
					<thead>
					<tr>
						<th><i class="fa fa-clock"></i> Time Sent</th>
						<th><i class="fa fa-paw"></i> Transaction Hash</th>
						<th><i class="fa fa-money-bill-alt"></i> Amount</th>
						<th style="width: 100px;"><i class="fa fa-cubes"></i> Blocks</th>
					</tr>
					</thead>
					<tbody id="stats_rows" class="stats_rows">

					</tbody>
				</table>
			</div>
			<p class="yourStats text-center">
				<button type="button" class="btn btn-default" id="loadMorePayments">Load More</button>
			</p>
		</div>
		</div>
	</div>
</div>

<script>

var lastMinerChartUpdate = new Date(2018, 1, 1);

currentPage = {
	destroy: function(){
		$('#networkLastBlockFound,#poolLastBlockFound,#yourLastShare,#marketLastUpdated').timeago('dispose');
		if (xhrAddressPoll) xhrAddressPoll.abort();
		if (addressTimeout) clearTimeout(addressTimeout);
		if (xhrGetPayments) xhrGetPayments.abort();
	},
	update: function(){
		var ts = new Date(lastStats.network.timestamp * 1000).toISOString(), lastHsh,
			blckFound = $('#networkLastBlockFound');
		blckFound.timeago('update', ts);
		blckFound.parent().attr("title", ts);

		updateText('networkHashrate', getReadableHashRateString(lastStats.network.difficulty / 120) + '/sec');
		updateText('networkDifficulty', lastStats.network.difficulty.toString());
		updateText('blockchainHeight', lastStats.network.height.toString());
		updateText('networkLastReward', getReadableCoins(lastStats.network.reward, coinDecimalPlaces));
		lastHsh = updateText('lastHash', lastStats.network.hash.substr(0, 13) + '...');
		if(lastHsh) {
			lastHsh.setAttribute('href',
				blockchainExplorer + lastStats.network.hash
			);
		}

		updateText('poolHashrate', getReadableHashRateString(lastStats.pool.hashrate) + '/sec');
        blckFound = $('#poolLastBlockFound');
		if (lastStats.pool.lastBlockFound){
			var d = new Date(parseInt(lastStats.pool.lastBlockFound)).toISOString();
			blckFound.timeago('update', d);
			blckFound.parent().attr("title", d);
		}
		else {
			blckFound.removeAttr('title').data('ts', '').update('Never');
			blckFound.parent().removeAttr("title");
		}

		updateText('poolMiners', lastStats.pool.miners.toString());
		updateText('poolRoundHashes', lastStats.pool.roundHashes.toString());
		$('#poolRoundHashes').append("&nbsp;(luck: " + formatLuck(lastStats.network.difficulty, lastStats.pool.roundHashes) + ")");

		//noinspection NodeModulesDependencies
        var totalFee = lastStats.config.fee;
		updateText('poolFee', totalFee + '%');

		updateText('blockSolvedTime', getReadableTime(lastStats.network.difficulty / lastStats.pool.hashrate));
		updateText('calcHashSymbol', lastStats.config.symbol);

		calcEstimateProfit();
	}
};

$('#networkLastBlockFound,#poolLastBlockFound,#yourLastShare,#marketLastUpdated').timeago();
function getReadableTime(seconds){

	var units = [ [60, 'second'], [60, 'minute'], [24, 'hour'],
		[7, 'day'], [4, 'week'], [12, 'month'], [1, 'year'] ];

	function formatAmounts(amount, unit){
		var rounded = Math.round(amount);
		return '' + rounded + ' ' + unit + (rounded > 1 ? 's' : '');
	}

	var amount = seconds;
	for (var i = 0; i < units.length; i++){
		if (amount < units[i][0]) {
			return formatAmounts(amount, units[i][1]);
		}
		amount = amount / units[i][0];
	}
	return formatAmounts(amount,  units[units.length - 1][1]);
}

/* Hash Profitability Calculator */

$('#calcHashRate').keyup(calcEstimateProfit).change(calcEstimateProfit);

$('#calcHashUnits > li > a').click(function(e){
    e.preventDefault();
    $('#calcHashUnit').text($(this).text()).data('mul', $(this).data('mul'));
	calcEstimateProfit();
});

function calcEstimateProfit(){
	try {
		var rateUnit = Math.pow(1000,parseInt($('#calcHashUnit').data('mul')));
		var inp2 = parseFloat($('#calcHashRate').val()) * rateUnit;
		var resl = ( lastStats.network.reward / coinUnits) / ((lastStats.network.difficulty / inp2) / 86400  );
		if (!isNaN(resl)) {
			updateText('calcHashAmount', (Math.round(resl * 100) / 100).toString());
			return;
		}
	}
	catch(e){ }
	updateText('calcHashAmount', '');
}





/* Stats by mining address lookup */

//noinspection JSUnusedLocalSymbols
function getPaymentCells(payment){
	return '<td>' + formatDate(payment.time) + '</td>' +
			'<td>' + formatPaymentLink(payment.hash) + '</td>' +
			'<td>' + getReadableCoins(payment.amount, coinDecimalPlaces, true) + '</td>' +
			'<td><div class="ellipsis">' + payment.extra + '</div></td>';
}

$('#lookUp').click(function(){
	var statsInput = $('#yourStatsInput'), addressLkp = statsInput.val().trim();
	if (!addressLkp){
		statsInput.focus();
		return;
	}		
	window.location.href = window.location.href.split('?')[0].replace('#', '') + '?miner=' + addressLkp;
});

var xhrAddressPoll = null;
var addressTimeout = null;

function fetchAddressStats(){
	var interval = readCookie('addressChartInterval');
	$('#chartOverlay').show();
	xhrAddressPoll = $.ajax({
		url: api + '/stats_address',
		data: {
			address: address,
			history: shouldFetchTheHistory(lastMinerChartUpdate),
			interval: interval ? interval : 24
		},
		dataType: 'json',
		cache: 'false',
		success: function(data){

			$('#lookUp > span:last-child').hide();
			$('#lookUp > span:first-child').show();

			if (!data.stats){
				var addrErr = $('#addressError');
				$('.yourStats').hide();
				addrErr.html($('#registrationMessage')[0].outerHTML);
				addrErr.show();

				if (addressTimeout) { 
					clearTimeout(addressTimeout);
				}
				addressTimeout = setTimeout(function(){
					fetchAddressStats();
				}, 2000);

				return;
			}

			$('#addressError').hide();
			if (data.stats.lastShare)
				$('#yourLastShare').timeago('update', new Date(parseInt(data.stats.lastShare) * 1000).toISOString());
			else
				updateText('yourLastShare', 'Never');

			updateText('yourHashrateHolder', (data.stats.hashrate || '0 H') + '/sec');
			updateText('yourHashes', (data.stats.roundCurrent || 0).toString());
			updateText('yourShare', getReadableCoins(lastStats.network.reward * data.stats.roundCurrent / lastStats.pool.roundHashes));
			updateText('yourPaid', getReadableCoins(data.stats.paid));
			updateText('yourPendingBalance', getReadableCoins(data.stats.balance));

			renderPayments(data.payments);

			$('.yourStats').show();

			docCookies.setItem('mining_address', address, Infinity);
							
			if(data.stats.history && data.stats.history.length > 0) {
				var data = [{
					name: '~' + address.substr(address.length - 7),
					data: function() {
						var res = [], nao = data.stats.historyTimestamp * 1000;
						var date = nao - data.stats.history.length * 300000;
						data.stats.history.forEach(function(itm) {
							res.push([date, itm / 300000]);
							date += 300000;	
						});
						while(date < nao) {
							res.push([date, 0]);
							date += 300000;
						}
						return res;
					}()
				}];
				data.push({
					name: 'Average',
					data: calculateDataAverage(data[0].data)
				});
				renderMinerChart(data);
			}

			$('#chartOverlay').hide();

			if(urlParams['miner']) { // clear url from miner address
				var url = window.location.href.split('?');
				var query = url[1].split('#');
                window.location.href = url[0] + (query.length > 1 ? query[1] : '');
			}
			setTimeout(fetchAddressStats, 60000);
		},
		error: function(e){
			$('#chartOverlay').hide();
			if (e.statusText === 'abort') return;
			$('#addressError').text('Connection error').show();

			if (addressTimeout) clearTimeout(addressTimeout);
			addressTimeout = setTimeout(function(){
				fetchAddressStats();
			}, 2000);
		}
	});
}

function applyMinerAddress() {
	var address = $('#yourStatsInput').val().trim();
	if (!address){
		$('#yourStatsInput').focus();
		return;
	}

	$('#addressError').hide();
	$('.yourStats').hide();
	$('#stats_rows').empty();

	$('#lookUp > span:first-child').hide();
	$('#lookUp > span:last-child').show();


	if (xhrAddressPoll) xhrAddressPoll.abort();
	if (addressTimeout) clearTimeout(addressTimeout);

	fetchAddressStats();
}

qsChunks = window.location.href.split('?');
qs = qsChunks.length > 1 ? qs = qsChunks[1] : '';
urlParams = parse_query_string(qs);

address = urlParams['miner'] || docCookies.getItem('mining_address');
if(address) {
	address = address.replace('#', '');
}

if (address){
	$('#yourStatsInput').val(address);
	applyMinerAddress();
}

$('#yourStatsInput').keyup(function(e){
	if(e.keyCode === 13)
		$('#lookUp').click();
});

var xhrGetPayments = null;
$('#loadMorePayments').click(function(){
	if (xhrGetPayments) xhrGetPayments.abort();
	xhrGetPayments = $.ajax({
		url: api + '/get_payments',
		data: {
			time: $('#stats_rows').children().last().data('time'),
			address: address
		},
		dataType: 'json',
		cache: 'false',
		success: function(data){
			renderPayments(data);
		}
	});
});

warnPaymentIdNote = $('#paymentIdNote');
if (readCookie('paymentIdNote')) {
	warnPaymentIdNote.hide();
} else {
	warnPaymentIdNote.show();
}

registerWarning = $('#registerWarning');
if (readCookie('registerWarning') || isAuthenticated) {
	registerWarning.hide();
} else {
	registerWarning.show();
}

// ****************************** Chart **************************
var minerChart = null;
function renderMinerChart(data) {
	lastMinerChartUpdate = new Date();
	if(minerChart) {
		data.forEach(function(itm, idx) {
			minerChart.series[idx].setData(itm.data, true);
		});
		return;
	}

	$('#chartColumn').show();

	//noinspection JSUnusedGlobalSymbols
    minerChart = Highcharts.stockChart('chart-container', {
		rangeSelector: { enabled: false },
		scrollbar: { enabled: false },
		navigator: { enabled: true, height: 20 },
		exporting: { enabled: false },
		yAxis: {
			title: {
				text: 'Hash rate (kH/s)'
			},
			labels: {
				formatter: function () {
					return this.value;
				}
			}
		},
		tooltip: {
			pointFormat: '<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b> (kH/s)<br/>',
			valueDecimals: 2,
			split: true
		},
		series: data
	});
}

function switchAddressChart(hours) {
	setTimeout(function() {
		createCookie('addressChartInterval', hours, 1000);
		if (xhrAddressPoll) xhrAddressPoll.abort();
		lastMinerChartUpdate = new Date(2018, 1, 1);
		fetchAddressStats();
	}, 200);
	return true;
}
</script>
